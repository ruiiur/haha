假设你的支付情景是这样的：
	 用户点击付费的视频会跳到支付页面进行支付，所以你要保留当前用户点击的视屏
	 信息，做法是保存在url的hash上，进入到支付页面时在从hash上取出来。这样的目的是为了获取订单号
获取订单号的步骤： 调用后端的接口，假设接口url是 ‘http://localhost:8080/order/pay’
然后咱们发送POST请求：
api是封装好的post请求方法，data是请求参数
data一般需要的数据项：data{
	payType: '微信还是支付宝',
	money: '金额',
	....等等，具体你要问后端同学需要哪些参数
}
api.post('order/info',data).then(function(res){
	var sn = res.sn  //sn为一个订单的唯一订单号
})

2.接下来开始支付接口了，也是你们后端提供的，假设支付接口是 'order/pay'
下面这data里需包括一个非常重要的数据 openId
这个openId是公众号的普通用户的一个唯一的标识，只针对当前的公众号有效；
获取方式：看下面
//获取openId的方法
//获取到之后
data = {
	sn : sn,
	openId: openId
}

api.post('order/pay', data).then(function(res){
	//这里的逻辑处理也就是res到底返回什么大部分是后端传的
	//我们只需要判断是微信还是支付宝
	//定义一个判断支付类型的变量
	var PAYTYPE = {
		ALIPAY: !ISWECHAT(),
		WECHAT: ISWECHAT()
	}
	//ISWECHAT()方法 '判断当前设备是否是微信返回true/false'
	if(PAYTYPE.ALIPAY) {
		//如果是支付宝一般是直接返回一个页面，这个不需要你做，
		//你只需要把这个页面展示出来就可以
		$(document.body).append(res.response)
	} else if(PAYTYPE.WECHAT) {
		//微信支付（重点来了）
		var payOption = JSON.parse(res.response)
		//这个payOption也是后端返回关于微信支付的信息，其中必须包括
		
		var submitData = {
			appId : //公众号名称, payOption.appId
			timeStamp: //时间戳 payOption.timeStamp
			nonceStr： //随机串 payOption.nonceStr：
			package： // payOption.package：
			signType: 'MD5' 微信签名方式, 
			paySign: //微信签名 payOption.paySign
		}
		我们得到上述所有数据后就可以调用微信的JSSDK了
		WeixinJSBridge.invoke('getBrandWCPayRequest', submitData, function(res) {
	        var ret = res.err_msg;
	        switch (ret) {
	            case 'get_brand_wcpay_request:ok':
	                alert('棒棒哒，充值成功了！')
	                break;
	            case 'get_brand_wcpay_request:cancel':
	                alert('充值终止')
	                break;
	            case 'get_brand_wcpay_request:fail':
	                alert('充值失败')
	                break;
	        }
	    });
	}
}) 


//获取openId的方法
(function(window, document) {
    var IS_WECHAT = /MicroMessenger/i.test(navigator.userAgent); //判断是否是微信浏览器
    var deferred = $.Deferred();
    var WX_JS_SDK_URL = '//res.wx.qq.com/open/js/jweixin-1.0.0.js'; //引入的js文件地址
    var WX_CODE = '';
    window.WECHAT_ACCESS_URL: 'https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxf4e79f8fc4d80a2b&redirect_uri=' + encodeURIComponent(location.href.replace(/\?.+/, '')) + '&response_type=code&scope=snsapi_userinfo&state=STATE#wechat_redirect',
    var Wechat = {};

    Wechat.getOpenId = function() {

        var deferred = $.Deferred();

        if (!IS_WECHAT) {
            deferred.reject();
            return deferred;
        }

        WX_CODE = $.getParams('code') || '';

        $.ajax({
            type: 'POST',
            dataType: 'json',
            data: {
                p: { 
                    code: WX_CODE,
                    url: location.href.replace(/#.+/, '')
                },
                os: 9
            },
            xhrFields: {
                withCredentials: true
            },
            crossDomain: true,
            url: 'oath/mp', //获取openid接口
            success: function(res) {
                if (!res.data.op) {
                    console.log('pre redirect' + '->' + QMTV.WECHAT_ACCESS_URL)
                    location.href = window.WECHAT_ACCESS_URL;
                    return;
                }

                window.__op__ = res.data.op;

                deferred.resolve(window.__op__);
            },
            error: function() {
                deferred.reject();
            }
        })

        return deferred.promise();

    }
//所有需要使用JS-SDK的页面必须先注入配置信息，否则将无法调用（同一个url仅需调用一次，
//对于变化url的SPA的web app可在每次url变化时进行调用,目前Android微信客户端不支持pushState的H5新特性
//，所以使用pushState来实现web app的页面会导致签名失败，此问题会在Android6.2中修复）
    Wechat.config = function() {
        //下面那个请求的目的也是获取支付JS_SDK的参数
        $.ajax({
            type: 'POST',
            dataType: 'json',
            data: {
                p: {
                    url: location.href.replace(/#.+/, '')
                },
                os: 9
            },
            xhrFields: {
                withCredentials: true
            },
            crossDomain: true,
            url: 'oath/jssdkParams', //这个URL找你的后端要
            success: function(res) {
                var wxOption = res.data;
                wx.config({
                    // debug: true, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
                    appId: wxOption.appId, // 必填，公众号的唯一标识
                    timestamp: wxOption.timestamp, // 必填，生成签名的时间戳
                    nonceStr: wxOption.nonceStr, // 必填，生成签名的随机串
                    signature: wxOption.signature, // 必填，签名，见附录1
                    jsApiList: ['onMenuShareQZone','onMenuShareWeibo','onMenuShareQQ','onMenuShareAppMessage','onMenuShareTimeline', 'chooseWXPay'] // 必填，需要使用的JS接口列表，所有JS接口列表见附录2
                });
                deferred.resolve();
            }
        })
    }
    window.Wechat = Wechat;

})(window, document);
